

/**
 * 逻辑与运算符  &&
 *
 * 逻辑与运算表达式  表达式1 && 表达式2
 *
 * 值：
 * 如果表达式1的值为真，表达式2的值为真，则整个逻辑与运算表达式的值为真
 * 如果表达式1的值为真，表达式2的值为假，则整个逻辑与运算表达式的值为假
 * 如果表达式1的值为假，表达式2的值为真，则整个逻辑与运算表达式的值为假
 * 如果表达式1的值为假，表达式2的值为假，则整个逻辑与运算表达式的值为假
 *
 * 【有一个为假就为假】
 *
 */

if (1 && 1) {
    console.log("******1");
}

if (1 && 0) {
    console.log("******2");
}


var a = 1;
var b = 1;
var c = 1;
if (a++ && --b && c++){
    console.log("sunck is a good man");
}
console.log(a);
console.log(b);
console.log(c);
//惰性求值(短路原则)
//表达式1&&表达式2&&表达式3&&……&&表达式n
//【短路原则】从左至右依次计算表达式的值，当遇到某一个表达式的值为假，那么已经确认整个表达式的值为假，后面的表达式就不会再被计算了






/**
 * 逻辑或运算符  ||
 *
 * 逻辑或运算表达式  表达式1 || 表达式2
 *
 * 值：
 * 如果表达式1的值为真，表达式2的值为真，则整个逻辑与运算表达式的值为真
 * 如果表达式1的值为真，表达式2的值为假，则整个逻辑与运算表达式的值为真
 * 如果表达式1的值为假，表达式2的值为真，则整个逻辑与运算表达式的值为真
 * 如果表达式1的值为假，表达式2的值为假，则整个逻辑与运算表达式的值为假
 *
 * 【有一个为真就为真】
 *
 */

if (1 || 1) {
    console.log("******1");
}

if (0 || 1) {
    console.log("******2");
}

if (1 || 0) {
    console.log("******3");
}

if (0 || 0) {
    console.log("******4");
}


var a = 1;
var b = 1;
var c = 1;
if (a++ || --b || c++){
    console.log("sunck is a good man");
}
console.log(a);
console.log(b);
console.log(c);
//惰性求值(短路原则)
//表达式1||表达式2||表达式3||……||表达式n
//【短路原则】从左至右一次计算表达式的值，当遇到某一个表达式的值为真，那么已经确认整个表达式的值为真，后面的表达式就不会再被计算了




/**
 * 逻辑非运算符  !
 *
 * 逻辑非运算表达式  !表达式
 *
 * 值：
 * 如果表达式的值为真，则逻辑非运算表达式的值为假
 * 如果表达式的值为假，则逻辑非运算表达式的值为真
 *【颠倒黑白】
 *
 */

if (!0) {
    console.log("****1");
}

if (!1) {
    console.log("****2");
}



